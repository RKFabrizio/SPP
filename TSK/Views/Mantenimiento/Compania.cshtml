
@{
    ViewData["Title"] = "Compania";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}

<style>
    .user-icon-container {
        display: flex;
        align-items: center;
    }

        .user-icon-container .icon-tabler {
            margin-right: 10px;
            width: 50px;
            height: 50px;
        }

        .user-icon-container .page-title {
            margin-left: -4px;
        }

    .page-title {
        color: #a79a66;
    }

</style>

@section PagePreTitle{

    <div class="col">
        <!-- Page pre-title -->
        <div class="user-icon-container">
          <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-building" width="32" height="32" viewBox="0 0 24 24" stroke-width="1.5" stroke="#a79a66" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
              <path d="M3 21l18 0" />
              <path d="M9 8l1 0" />
              <path d="M9 12l1 0" />
              <path d="M9 16l1 0" />
              <path d="M14 8l1 0" />
              <path d="M14 12l1 0" />
              <path d="M14 16l1 0" />
              <path d="M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16" />
            </svg>
            <h2 class="page-title">
                Compa&ntilde;ía
            </h2>
        </div>
    </div>
}

@section PageActions{


}

@(Html.DevExtreme().DataGrid<SPP.Models.Entity.Compania>()
    .DataSource(ds => ds.Mvc()
        .Controller("Companias")
        .LoadAction("Get")
        .Key("IdCompania")
    )
    .RemoteOperations(true)
    .Columns(columns => {

        columns.AddFor(m => m.NombreCompania).Caption("Nombre de la Compañia");

        columns.AddFor(m => m.IdPais).Lookup(lookup => lookup
           .DataSource(ds => ds.WebApi().Controller("Companias").LoadAction("PaisesLookup").Key("Value"))
           .ValueExpr("Value")
           .DisplayExpr("Text")
        ).Caption("País");
    })

    .ShowBorders(true)
    .AllowColumnReordering(true)
    .RowAlternationEnabled(false)
    .ShowColumnLines(true)
    .ShowRowLines(true)
                .Grouping(g => g.AutoExpandAll(false))
    .Paging(paging => paging.PageSize(20))
    .FilterRow(f => f.Visible(true))
    .Pager(pager =>
    {
        pager.ShowPageSizeSelector(true);
        pager.AllowedPageSizes(new[] { 20, 50, 100 });
        pager.ShowInfo(true);
    })
    .SearchPanel(s => s
        .Visible(true)
        .HighlightCaseSensitive(true)
    )
)
