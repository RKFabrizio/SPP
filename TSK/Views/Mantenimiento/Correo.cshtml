
@{
    ViewData["Title"] = "Correo";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}
<style>
    .user-icon-container {
        display: flex;
        align-items: center;
    }

        .user-icon-container .icon-tabler {
            margin-right: 10px;
            width: 50px;
            height: 50px;
        }

        .user-icon-container .page-title {
            margin-left: -4px;
        }

    .page-title {
        color: #a79a66;
    }

</style>

@section PagePreTitle{

    <div class="col">
        <!-- Page pre-title -->
        <div class="user-icon-container">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-mail" width="32" height="32" viewBox="0 0 24 24" stroke-width="1.5" stroke="#a79a66" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
              <rect x="3" y="5" width="18" height="14" rx="2" />
              <polyline points="3 7 12 13 21 7" />
            </svg>
            <h2 class="page-title">
                Mantenimiento de Correos de Destinatarios de Informe de Aprobación
            </h2>
        </div>
    </div>
}

@section PageActions{


}

@(Html.DevExtreme().DataGrid<SPP.Models.Entity.Usuario>()
    .DataSource(ds => ds.Mvc()
        .Controller("Usuarios")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .Key("IdUsuario")
    )
    .RemoteOperations(true)
    .Columns(columns =>
    {

       
        columns.AddFor(m => m.Login).Caption("Usuario").Width(200);
        columns.AddFor(m => m.Correo);
        columns.AddFor(m => m.IdPerfil).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Usuarios").LoadAction("PerfilesLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        ).GroupIndex(0).Caption("Perfil");

        columns.AddFor(m => m.Habilitado).Caption("Estado").Width(200);
    })
    .ShowBorders(true)
            .AllowColumnReordering(true)
            .RowAlternationEnabled(false)
            .ShowColumnLines(true)
            .ShowRowLines(true)
                        .Grouping(g => g.AutoExpandAll(false))
            .Paging(paging => paging.PageSize(20))
            .FilterRow(f => f.Visible(true))
            .Pager(pager =>
            {
                pager.ShowPageSizeSelector(true);
                pager.AllowedPageSizes(new[] { 20, 50, 100 });
                pager.ShowInfo(true);
            })
            .SearchPanel(s => s
                .Visible(true)
                .HighlightCaseSensitive(true)
            )
            .Editing(e => e.Mode(GridEditMode.Popup)
                    .AllowUpdating(true)
                    .UseIcons(true)
                    .Popup(p => p
                        .Title("Usuario")
                        .ShowTitle(true)
                        .Width("70%")
                        .Height(200)
                    )

                    .Form(f => f.Items(items =>
                    {
                        items.AddGroup()
                            .ColCount(2)
                            .ColSpan(2)
                            .Items(groupItems =>
                            {
                                groupItems.AddSimpleFor(m => m.Login);
                                groupItems.AddSimpleFor(m => m.Correo);
                            });
                    }))

                )
)



