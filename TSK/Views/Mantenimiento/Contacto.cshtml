
@{
    ViewData["Title"] = "Contacto";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}

<style>
    .user-icon-container {
        display: flex;
        align-items: center;
    }

        .user-icon-container .icon-tabler {
            margin-right: 10px;
            width: 50px;
            height: 50px;
        }

        .user-icon-container .page-title {
            margin-left: -4px;
        }

    .page-title {
        color: #a79a66;
    }

    .container {
    display: flex;
    justify-content: center;
    align-items: center;
 
}


</style>

@section PagePreTitle{

    <div class="col">
        <!-- Page pre-title -->
        <div class="user-icon-container">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-address-book" width="32" height="32" viewBox="0 0 24 24" stroke-width="1.5" stroke="#a79a66" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M20 6v12a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2z" />
                <path d="M10 16h6" />
                <path d="M13 11m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
                <path d="M4 8h3" />
                <path d="M4 12h3" />
                <path d="M4 16h3" />
            </svg>
            <h2 class="page-title">
                Mantenimiento de Contacto de Usuarios
            </h2>
        </div>
    </div>
}

@section PageActions{


}

<div class="container">
    @(Html.DevExtreme().DataGrid<SPP.Models.Entity.Usuario>()

        .DataSource(ds => ds.Mvc()
        .Controller("UsuariosNew")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .Key("IdUsuario")
        )
        .RemoteOperations(true)

        .Columns(columns =>
        {

            columns.AddFor(m => m.Login).Caption("Username").Width(200).AllowEditing(false);

            columns.AddFor(m => m.Nombre).Width(200).Caption("Nombres").AllowEditing(false);

            columns.AddFor(m => m.Apellido).Width(200).Caption("Apellidos").AllowEditing(false);


            columns.AddFor(m => m.IdPerfil).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Usuarios").LoadAction("PerfilesLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
            ).GroupIndex(0).Caption("Perfil");

            columns.AddFor(m => m.Contacto).Caption("Contacto").Width(200);


        })
        .ShowBorders(true)
        .AllowColumnReordering(true)
        .RowAlternationEnabled(false)
        .ShowColumnLines(true)
        .ShowRowLines(true)
        .Grouping(g => g.AutoExpandAll(false))
        .Paging(paging => paging.PageSize(20))
        .FilterRow(f => f.Visible(true))
        .Pager(pager =>
        {
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new[] { 20, 50, 100 });
            pager.ShowInfo(true);
        })
        .SearchPanel(s => s
        .Visible(true)
        .HighlightCaseSensitive(true)
        )
        .Editing(e => e.Mode(GridEditMode.Popup)
        .AllowUpdating(true)
        .UseIcons(true)
        .Popup(p => p
        .Title("Contacto de Usuario")
        .ShowTitle(true)
        .Width("70%")
        .Height(250)
        )

        .Form(f => f.Items(items =>
        {
            items.AddGroup()
            .ColCount(2)
            .ColSpan(2)
            .Items(groupItems =>
            {
                groupItems.AddSimpleFor(m => m.Nombre);
                groupItems.AddSimpleFor(m => m.Apellido);
                groupItems.AddSimpleFor(m => m.Login);
                groupItems.AddSimpleFor(m => m.Contacto).CssClass("myFormMargin").Label(label => label.Location(FormLabelLocation.Left));

            });
        }))

        )


        )

</div>


