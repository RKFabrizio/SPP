
@{
    ViewData["Title"] = "PendienteAprobar";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}

<style>
    .user-icon-container {
        display: flex;
        align-items: center;
    }

        .user-icon-container .icon-tabler {
            margin-right: 10px;
            width: 50px;
            height: 50px;
        }

        .user-icon-container .page-title {
            margin-left: -4px;
        }

    .page-title {
        color: #a79a66;
    }

</style>

@section PagePreTitle{

    <div class="col">
        <!-- Page pre-title -->
        <div class="user-icon-container">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-file-like" width="32" height="32" viewBox="0 0 24 24" stroke-width="1.5" stroke="#a79a66" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
              <path d="M3 16m0 1a1 1 0 0 1 1 -1h1a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-1a1 1 0 0 1 -1 -1z" />
              <path d="M6 20a1 1 0 0 0 1 1h3.756a1 1 0 0 0 .958 -.713l1.2 -3c.09 -.303 .133 -.63 -.056 -.884c-.188 -.254 -.542 -.403 -.858 -.403h-2v-2.467a1.1 1.1 0 0 0 -2.015 -.61l-1.985 3.077v4z" />
              <path d="M14 3v4a1 1 0 0 0 1 1h4" />
              <path d="M5 12.1v-7.1a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-2.3" />
            </svg>
            <h2 class="page-title">
                Pendientes de Aprobación
            </h2>
        </div>
    </div>
}

@section PageActions{


}

@(Html.DevExtreme().DataGrid<SPP.Models.Entity.Pago>()
     .DataSource(ds => ds.Mvc()
         .Controller("PagoPendienteAprobacion")
         .LoadAction("Get")
         .Key("IdPago")
     )
     .RemoteOperations(true)
     .Columns(columns =>
     {

         columns.AddFor(m => m.IdPago).Caption("Nro de Solicitud").Width(120);

         columns.AddFor(m => m.IdTipoAdelanto).Lookup(lookup => lookup
             .DataSource(ds => ds.WebApi().Controller("PagoPendienteAprobacion").LoadAction("TipoAdelantosLookup").Key("Value"))
             .ValueExpr("Value")
             .DisplayExpr("Text")
         ).Caption("Tipo de Solicitud").Width(125);

         columns.AddFor(m => m.IdProveedor).Lookup(lookup => lookup
             .DataSource(ds => ds.WebApi().Controller("PagoPendienteAprobacion").LoadAction("ProveedoresLookup").Key("Value"))
             .ValueExpr("Value")
             .DisplayExpr("Text")
         ).Caption("Proveedor").Width(250);

         columns.AddFor(m => m.IdTipoMoneda).Lookup(lookup => lookup
             .DataSource(ds => ds.WebApi().Controller("PagoPendienteAprobacion").LoadAction("TipoMonedasLookup").Key("Value"))
             .ValueExpr("Value")
             .DisplayExpr("Text")
         ).Caption("Moneda").Width(80);

         columns.AddFor(m => m.Importe).Caption("Importe").DataType(GridColumnDataType.Number).Format(c => c
             .Type(Format.FixedPoint)
             .Precision(2)
         ).Width(120);

         columns.AddFor(m => m.Concepto).Width(200);

         columns.AddFor(m => m.LoginSolicitante).Lookup(lookup => lookup
             .DataSource(ds => ds.WebApi().Controller("PagoPendienteAprobacion").LoadAction("UsuariosLookup").Key("Value"))
             .ValueExpr("Value")
             .DisplayExpr("Text")
         ).Caption("Solicitante");

         columns.AddFor(m => m.LoginAprobador).Lookup(lookup => lookup
             .DataSource(ds => ds.WebApi().Controller("PagoPendienteAprobacion").LoadAction("AprobadorAreasLookup").Key("Value"))
             .ValueExpr("Value")
             .DisplayExpr("Text")
         ).Caption("Aprobador");

         columns.AddFor(m => m.IdEstado).Lookup(lookup => lookup
             .DataSource(ds => ds.WebApi().Controller("PagoPendienteAprobacion").LoadAction("EstadosLookup").Key("Value"))
                 .ValueExpr("Value")
                 .DisplayExpr("Text")
             ).Caption("Estado");

         columns.AddFor(m => m.IdTipoPago).Lookup(lookup => lookup
             .DataSource(ds => ds.WebApi().Controller("PagoPendienteAprobacion").LoadAction("TipoPagosLookup").Key("Value"))
             .ValueExpr("Value")
             .DisplayExpr("Text")
         ).HidingPriority(8).Caption("Tipo Pago");

         columns.AddFor(m => m.Observaciones).HidingPriority(1);

         columns.AddFor(m => m.InformacionContable).HidingPriority(2).Caption("Información Contable");

         columns.AddFor(m => m.CuentaBancaria).HidingPriority(3).Caption("Cuenta Bancaria");

         columns.AddFor(m => m.BeneficiarioNombre).HidingPriority(4).Caption("Beneficiario Nombre");

         columns.AddFor(m => m.IdBanco).Lookup(lookup => lookup
             .DataSource(ds => ds.WebApi().Controller("PagoPendienteAprobacion").LoadAction("BancosLookup").Key("Value"))
             .ValueExpr("Value")
             .DisplayExpr("Text")
         ).HidingPriority(5).Caption("Banco");

         columns.AddFor(m => m.IdTipoCuenta).Lookup(lookup => lookup
             .DataSource(ds => ds.WebApi().Controller("PagoPendienteAprobacion").LoadAction("TipoCuentasLookup").Key("Value"))
             .ValueExpr("Value")
             .DisplayExpr("Text")
         ).HidingPriority(6).Caption("Tipo Cuenta");

         columns.Add()
         .Caption("Referencia OC")
         .CellTemplate(
             @<text>
                 @Html.ActionLink("Referencias", "OpenPdf", "Pagoes", new { pago = 100 })
             </text>
        );



     })
     .ShowBorders(true)
            .AllowColumnReordering(true)
            .RowAlternationEnabled(false)
            .ShowColumnLines(true)
            .ShowRowLines(true)
            .Paging(paging => paging.PageSize(20))
            .FilterRow(f => f.Visible(true))
            .Pager(pager =>
            {
                pager.ShowPageSizeSelector(true);
                pager.AllowedPageSizes(new[] { 20, 50, 100 });
                pager.ShowInfo(true);
            })
            .SearchPanel(s => s
                .Visible(true)
                .HighlightCaseSensitive(true)
            )
)

 
<script>
    function cellClick(e) {
        if (e.column.caption === "PDF File") {
            window.location.href = '@Url.Action("OpenPdf", "Pagoes")';
        }
    }
</script>
